# This file is automatically @generated by Lapidary and should not be changed by hand.

from __future__ import annotations

import typing

import lapidary.runtime
import pydantic
import typing_extensions
import airtable.components.schemas.SortOrder.schema
import lapidary.runtime


class ListRecordsRequest(lapidary.runtime.ModelBase):
    pageSize: typing.Annotated[
        typing.Union[None, int],
        pydantic.Field(
            alias='pageSize',
            ge=1.0,
            le=100.0,
        )
    ] = None

    maxRecords: typing.Annotated[
        typing.Union[None, int],
        pydantic.Field(
            alias='maxRecords',
        )
    ] = None

    offset: typing.Annotated[
        typing.Union[None, str],
        pydantic.Field(
            alias='offset',
        )
    ] = None

    view: typing.Annotated[
        typing.Union[None, str],
        pydantic.Field(
            alias='view',
        )
    ] = None

    sort: typing.Annotated[
        typing.Union[None, list[airtable.components.schemas.SortOrder.schema.SortOrder]],
        pydantic.Field(
            alias='sort',
        )
    ] = None

    filterByFormula: typing.Annotated[
        typing.Union[None, str],
        pydantic.Field(
            alias='filterByFormula',
        )
    ] = None

    cellFormat: typing.Annotated[
        typing.Union[None, str],
        pydantic.Field(
            alias='cellFormat',
        )
    ] = None

    fields: typing.Annotated[
        typing.Union[None, list[str]],
        pydantic.Field(
            alias='fields',
        )
    ] = None

    returnFieldsByFieldId: typing.Annotated[
        typing.Union[None, bool],
        pydantic.Field(
            alias='returnFieldsByFieldId',
        )
    ] = None

    recordMetadata: typing.Annotated[
        typing.Union[None, bool],
        pydantic.Field(
            alias='recordMetadata',
        )
    ] = None
